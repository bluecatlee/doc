【动态映射】
	根据字段值自动映射类型
	
	json数据字段值		      自动映射后的类型
	null   				-->    不会添加该字段
	true/false			-->    boolean类型
	浮点类型数字    	-->    float类型
	数字            	-->    long类型
	json对象        	-->    object类型
	数组           	 	-->    由数组中第一个非空值决定
	string          	-->    可能是date类型(开启了日期检测) double long text keyword类型

【静态映射】
	创建索引时指定映射

#################################################################################################################################################################	
【字段类型】	
	
字符串
    string	   5.x之后已废弃
	text       用于全文索引 该类型字段会通过分词器进行分词并生成词项 最终构建索引。不用于排序 很少用于聚合(除了termsAggregation)
	keyword    不分词 整体作为一个关键字 只能精确值搜索到
	
数值型
		long
		integer
		short
		byte
		double			64位双精度浮点类型
		float			32位单精度浮点类型
		half_float		16位半精度浮点类型
		scaled_float	缩放类型的浮点数
		
		说明：float half_float scaled_float类型的+0.0和-0.0是不同的值
			  scaled_float是通过缩放因子把浮点数变成long类型。底层存储整数类型 压缩整数比压缩浮点数更加节省存储空间。 浮点数优先选择scaled_float
		
布尔boolean
		false/"false"
		true/"true"
		
日期date
		es中没有date类型 因为json中没有date类型
		日期形式：
		1) 格式化日期字符串
		2) 代表milliseconds-since-the-epoch的长整型数
		3) 代表seconds-since-the-epoch的整型数
		
		es默认会把日期转成UTC 最终存储的是毫秒  strict_date_optional_time||epoch_millis
		
		
二进制binary
		把值当做base64编码的字符串 默认不存储（store属性为false） 不可搜素


复杂类型
	数组类型 array
			es没有专用的数组类型 默认任何字段都可以包含多个值 数组中的多个值必须是同一个类型
			字符数组["a", "b"]
			整型数组[1,2]
			嵌套数组[1,[2,3]] 等价于[1,2,3]
			对象数组[{"name": "a"}, {"name": "b"}]
			不支持混合数组类型。第一个值的类型即数组的类型。数组可以包含null值。空数组[]会被当做missing field
	
	对象类型 object
			json对象具有层级关系 复杂的json对象会被索引成简单的扁平key-value对
			对象数组在扁平化之后 对象的字段值可能会变成多值 且同一个对象内的多个字段值不再有关联 对象内属性的关联关系丢失。
	
	嵌套类型 nested
			object类型的一个特例，可以让对象数组独立索引和查询
			nested可以保持数组中每个对象的独立性。将数组中每个对象作为独立隐藏文档来索引
			每个索引可定义的最大嵌套字段数为50
			
	
地理类型
	地理坐标 geo_point
			存储经纬度(一个坐标点)。可以用于查询一定范围内的地理位置 按照指定位置的距离来聚合文档 通过距离对文档评分排序
			geo_point类型的字段的值可以用经纬度坐标键值对、字符串(逗号分隔)、地理坐标的hash、数组 来表示
		
	地理图形 geo_shape
			存储一块区域 如三角形、矩形或其他多边形
			geojson来表示地理形状
			
			(geo_point类型的字段 纬度在前经度在后；geo_shape类型中的点 经度在前纬度在后)
			
特殊类型
		IP类型 ip  存储ipv4 ipv6地址 
		
		范围类型range
			integer_range
			float_range
			long_range
			double_range
			date_range
			
			说明：range类型的值由边界值组成 gte lte等。一般可以不用range类型 而用多个字段来代替表示范围
		
		令牌计数类型 token_count
			统计字符串分词后的词项个数 本质上是整型的
		
		附件类型 attachment
		抽取类型 percolator
		补全类型 completion


###################################################################################################################################################################
【元字段】
_index			文档所属索引。是虚拟字段 不会真的加到索引中。支持term terms查询等(match query_string simple_query_string) 不支持prefix wildcard regexp和fuzzy查询
							  支持聚合 脚本 排序
_type			文档的类型	可进行查询 聚合 脚本 排序
_id				文档id	可用于term terms查询等 不能聚合 脚本 排序
_uid			包含_type和_id的复合字段 值为{type}#{id} 可支持功能与_type一样
_source			文档的原始json字符串 默认开启 可以在映射中设置_source.enabled的值为false来关闭
									 一般不用关闭 因为update update_by_query reindex 关键字高亮 备份 改变mapping 升级索引 等操作都需要用到文档原始值
_size			_source字段的大小(字节数) 默认不开启 安装mapper-size并在映射设置_size.enabled为true来开启
_all			包含索引全部字段的超级字段 所有字段内容用空格分开。 _all字段会被解析和索引 但是不存储
										   针对所有字段进行搜索的时候很有用
_field_names	文档中包含非空值的所有字段 常用于exists查询
_parent			指定文档间的父子关系
_routing		将文档路由到特定分片的自定义路由值。默认是_id或_parent 父子文档需要在一个分片上 。可以在mapping设置_routing.required为true来指定路由是必须的
_meta			自定义元字段

###################################################################################################################################################################
【映射参数】
字段属性：

type    数据类型

index   如果设置了index属性 则该字段会被创建一个倒排索引(相当于在该字段创建索引) 不索引就不能搜索

index_options  控制索引时存储的信息。
				docs		只存储文档编号 默认
				freqs		存储文档编号和词项频率
				positions   存储文档编号、词项频率和词项偏移位置  (偏移位置可用于临近搜索和短语查询)
				offsets		存储文档编号、词项频率、词项偏移位置和词项开始和结束的字符位置  (offsets设为true会使用Posting highlighter)
				
fields	让同一个字段有多种不同的索引方式 			

properties 属性(类型的映射 普通字段 object类型和nested类型的字段都称为properties)	

store   是否存储(默认false)。默认在_source字段保存了原始文档 所以不存储没关系。 如果store为true 则不会存储在_source 而存储在外部 适用于一些大字段

doc_values  默认开启 加快排序 聚合。 索引时会额外增加一个列式存储映射。对not_analyzed字段，默认都是true。即不分词字段直接存储值 空间换时间
			对于不需要聚合或排序的可以直接关闭
			text类型不支持doc_values

format  如果数据类型是日期格式 需要格式字符串进行日期转换。多种格式用||分隔

analyzer 分词器。对搜索和查询都有效。分词器会把文本类型的内容转成多个词项

search_analyzer 搜索时的分词器 默认和analyzer一致。

normalizer  解析前的标准化配置 比如可以转成小写

boost  设置字段的权重 默认是1。推荐在查询时指定boost 因为索引期修改boost需要重新索引文档才有效果 查询时指定权重可以直接修改

coerce  用于清除脏数据 默认true 可以处理类似"10"设置给integer类型字段的情况

copy_to  用于自定义一个超级字段 _all就是一个超级字段

dynamic  用于检测新发现的字段 默认为true:自动添加字段(新字段会被自动映射类型)； false表示忽略新的字段； strict：严格模式 发现新的字段抛出异常

enabled  es默认索引所有字段。enabled为false则不索引 该字段只能从_source中获取 不能搜索  (enabled属性可以直接作为类型的属性 false表示禁用映射)
		 对于只需要存储 没有查询或聚合需求的字段 可以关闭

fielddata text类型的字段在查询(首次被聚合、排序、脚本)时会生成fielddata 默认关闭 开启非常耗内存。text类型字段上做聚合排序等操作一般是没有意义的 如果有 则需要优化

null_value  设置缺失字段的初始化值 只有string可以使用。  默认null值的字段不会被索引 也不能搜索。设为true则可以

ignore_above  指定字段分词和索引的字符串的最大长度 超出则忽略 只用于keyword类型

ignore_malformed  忽略不规则数据 设为true表示如果数据类型不匹配且无法强转 会忽略异常。出异常的字段不会被索引

include_in_all   指定字段的值是否包含在_all中 默认true

similarity   指定文档的评分模型   BM25(默认评分模型)  classic(TF/IDF评分)  boolean(布尔模型评分)   

term_vector  词向量 包含了词项集合 词项位置 词项的起始字符映射到原始文档的位置。
			 默认no(不存储词向量)

norms	用于标准化文档 以便查询时计算文档的相关性。占磁盘空间 如果不对某个字段进行评分 最好不要开启

position_increment_gap 指定间距。 为了支持近似或短语查询 text类型的字段解析时会考虑词项的位置信息。默认100

#precision_step  


#################################################################################################################################################################################
【映射模板】
	动态映射 可以设置规则 支持通配符 如以某个名称开头的字段的数据类型进行转换