事件触发器EventEmitter
	所有能触发事件的对象都是EventEmitter类的实例
	eventEmitter.on()函数用于将一个或多个函数绑定到命名事件上。
	当EventEmitter对象触发一个事件时，所有绑定在该事件上的函数都会被同步地调用。被调用的监听器返回的任何值都将会被忽略并丢弃
	EventEmitter以注册的顺序同步地调用所有监听器
	监听器函数可以使用setImmediate()和process.nextTick()方法切换到异步的操作模式
	
	eventEmitter.on() 		注册事件监听器。可以传任意数量的参数到监听器函数，监听器会在每次触发命名事件时被调用
											当监听器函数被调用时， this关键词会被指向监听器所绑定的EventEmitter实例
											如果使用ES6的箭头函数作为监听器，this关键词不会指向EventEmitter实例
											
	eventEmitter.once()		注册事件监听器，监听器最多调用一次。当事件被触发时，监听器会被注销，然后再调用										
	eventEmitter.emit()		触发事件
	
	当EventEmitter实例出错时，会触发'error'事件，如果没有注册对应的监听器，会抛出错误、打印堆栈跟踪、并退出Node.js进程
	应该始终为error事件注册监听器
	为了防止Node.js进程崩溃，可以使用domain模块(不推荐)
	通过使用符号errorMonitor安装监听器，eventEmitter.on(EventEmitter.errorMonitor, Function) 来监视'error'事件但不消耗触发的错误，所以没有对应的监听器处理的话Node.js进程依然会崩溃。
	
	
	----------API----------------------------
	'newListener'事件
		EventEmitter实例在新的监听器被添加到其内部监听器数组之前，会触发自身的'newListener'事件。
		
	'removeListener'事件	
		'removeListener'事件在listener被移除后触发。
		
	EventEmitter.defaultMaxListeners
		默认情况下，每个事件可以注册最多10个监听器。超出则EventEmitter会打印一个警告
		emitter.setMaxListeners(n)方法改变单个EventEmitter实例的限制
		可以使用EventEmitter.defaultMaxListeners属性改变所有EventEmitter实例的默认值
	emitter.getMaxListeners()
	emitter.setMaxListeners(n)	
	
	EventEmitter.errorMonitor	
	
	emitter.addListener(eventName, listener)			emitter.on(eventName, listener)的别名
	emitter.removeListener(eventName, listener)			【事件触发之后、且最后一个监听器执行完成之前，执行remove操作，监听器依然会执行】
	emitter.removeAllListeners([eventName])
	emitter.emit(eventName[, ...args])					按照监听器注册的顺序，同步地调用每个注册到名为 eventName 的事件的监听器，并传入提供的参数
														如果事件有监听器，则返回true，否则返回false
	emitter.eventNames()								返回已注册监听器的事件名数组	
	emitter.listenerCount(eventName)					返回正在监听的名为eventName的事件的监听器的数量
	emitter.listeners(eventName)						返回名为eventName的事件的监听器数组的副本
	emitter.off(eventName, listener)					emitter.removeListener()的别名
	emitter.on(eventName, listener)						添加listener函数到名为eventName的事件的监听器数组的末尾
														【不会检查listener是否已被添加。 多次调用并传入相同的eventName与listener会导致listener被添加多次】
														返回对EventEmitter的引用，以便可以链式调用
	emitter.prependListener(eventName, listener)		将事件监听器添加到监听器数组的开头
	emitter.once(eventName, listener)
	emitter.prependOnceListener(eventName, listener)
	emitter.rawListeners(eventName)						返回eventName事件的监听器数组的拷贝
	
	events.once(emitter, name)
	events.on(emitter, eventName)
	
	
	