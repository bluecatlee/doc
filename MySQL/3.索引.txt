对text blob类型字段建立索引：单独用一个列保存大字段值的hash，对这个列创建索引。但是大字段精确查找一般也用不上。如果要模糊查询，需要创建前缀索引，即对大字段的前n列创建索引。

MyISAM和InnoDB存储引擎的表创建的索引默认是btree索引
MyISAM支持全文索引，可用于全文搜索。
MEMORY默认是HASH索引，也支持btree索引。

前缀索引：对索引字段的前n个字符创建索引。

最适合创建索引的列是where条件的列和连接子句中指定的列。
状态字段，只有少数几个值，没必要创建索引。
索引太多导致写操作性能降低，并影响mysql的自动优化效果。

InnoDB存储引擎的表，记录默认按照主键顺序保存，如果没有主键，就按唯一索引的顺序保存，如果也没用，表中会自动生成一个内部列row，按照这个列的顺序保存。
InnoDB表的普通索引会保存主键的键值，所以主键尽量选择较短的数据类型。索引文件是独立于数据的，内容就是索引值与主键值的映射。

-------------------------------------------------------
HASH索引
	只能精确搜索(或者是要精确比较的)，优化器无法优化排序操作。只有MEMORY支持
	
	
RTREE索引
	空间列类型的索引，只有MyISAM支持。主要用于地理空间数据类型。
	
Ful-text索引
	全文索引	

BTREE索引
	主键索引、唯一索引、普通索引、全文索引一般都是BTREE。大部分存储引擎都支持。
	比较(大于 小于 等于 不等)、BETWEEN、后模糊都可以使用索引。
	
	不是二叉树，而是平衡树。通常只需要很少的读操作就能找到正确的行。
	
	【重要】...
	
	
	
	
#####################################
解决like前模糊不使用索引的问题
		1）.创建全文索引
		2）.sql技巧，假如条件中还有其他字段，写用其他字段查询查询出满足的结果集之后再模糊查询，尽量避免全表查询
		
数据类型出现隐式转换的时候不会使用索引
		尤其是字段是字符串型，并且有索引，但是查询的时候值没有用引号引起来，可能就不会使用索引。
		
符合索引必须满足最左匹配原则才会使用

or前的列有索引，or后的列没有索引，则涉及的索引都不会被用到。因为后面的查询肯定会用到全表扫描，前面再去先查一遍索引反而复杂了。		