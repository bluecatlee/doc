	
	TxClient
		LCN事务客户端
	
	TxManager
		事务管理器依赖注册中心和redis
	
	注册中心consul等
		TxManager注册到consul上 可做集群
	
	nginx
		可选。 TxManager集群时可以通过nginx实现TxManager的负载均衡
	
	redis
		存放事务组的信息和补偿信息
	
	
	======================================================================================================
	
	核心 3PC+TCC补偿机制

	对connection进行代理 由TxManager统一协调控制事务。代理的连接由LCN连接池管理
	本地事务提交回滚或者关闭连接时将会执行假操作

	
	创建事务组
		事务发起方执行业务代码之前调用TxManager创建事务组对象 拿到groupId
	添加事务组
		参与方在执行完业务代码后 将该模块事务信息通知给TxManager
	关闭事务组
		发起方执行完业务代码后 将发起方执行结果状态通知给TxManager
		执行完关闭事务组的方法后，TxManager将根据事务组信息来通知相应的参与模块提交或回滚事务


	自动超时机制

	只能识别创建不同的连接 对只读操作 非事务操作LCN将不开启代理功能，返回本地连接对象
			    对于补偿事务的启动方 将开启回滚连接对象 执行完业务后马上回滚事务

	LCN连接重用机制

	事务补偿机制：
		
		触发条件
			在关闭事务组阶段 TxManager本应通知所有参与者提交或回滚 但是有参与者未通知成功 TxManager会做个标识返回给发起方
			若发起方接受到失败的状态后会将该次事务标记为待补偿事务 然后发起方将本次事务数据异步通知给TxMananger。
			TxManager接收到补偿事务后先通知补偿回调地址 再根据是否开启自动补偿事务状态来补偿或保存该次切面事务数据
			
		实现：
			发起方先本地记录日志 然后把本次切面的信息(发起方本次事务信息及groupId)提交给TxManager
			TxManager接收到数据后 先查询该事务组的详细信息 再一起保存到redis 并调用回调接口(自定义的服务，用来处理需要回调的通知) 
			
			如果开启了自动补偿 在通知了补偿回调接口之后 会把切面信息传回给发起方
			发起方重复执行本次事务 具体怎么处理参与方的提交或者回滚？

	=========================================================================================================
	A发起方: LCN模式    
	B参与方: TXC模式     回滚的时候没有删除？
	C参与方: TCC模式	进行了组回滚


	问题：
		是否还需要带上@Transactional注解？

		LCN事务的传播机制区别

		实际已经提交 然后删除？


		发起方默认就在事务中？
		那如何控制不需要在一个事务的情况


	分析


	推断： 类似3PC 参与者有超时机制 如果长时间收不到协调者的最终命令 参与者自动提交/回滚（判定条件？）

	
	============================================================================================================
	
	缺点：在阿里开源了seata之后 seata明显关注度更高
                          半年未维护 热度低
	          文档较少 只有总体原理和简单使用 

	         

	目前项目要使用的话 app层必须要用到数据库 记录日志
	app层作为事务发起方 所有调用的服务发生异常之后 由app层进行判断是否需要回滚）